apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-backend-deployment
  # kind's label one is optional
  labels:
    app: web-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-backend
  template:
    metadata:
      # template label is required, replicas will need it
      labels:
        app: web-backend
    spec:
      containers:
      - name: web-backend
        image: leonzchang/dragonstack-api:latest
        ports:
        - containerPort: 3000
        # setting env from `secret`
        env:
        - name: PG_USER_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: PG_USER_PWD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-pwd
        - name: PG_DB_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-db
        # setting env from config
        - name: PG_DB_URL
          valueFrom:
            configMapKeyRef:
              name: service-config
              key: postgres-url
        - name: 
          valueFrom: PG_DB_PORT
            configMapKeyRef:
              name: service-config
              key: postgres-port
        - name: 
          valueFrom: FRONTEND_URL
            configMapKeyRef:
              name: service-config
              key: frontend-url
        - name: 
          valueFrom: FRONTEND_PORT
            configMapKeyRef:
              name: service-config
              key: frontend-port

---

apiVersion: v1
kind: Service
metadata:
  name: web-backend-service
spec:
  # type default is ClusterIP which means internal service ip, NodePort is for external
  type: NodePort
  selector:
    app: web-backend
  ports:
    - protocol: TCP
      port: 3000
      # export the port to let others pod in the same node can connect
      targetPort: 3000
      # range in 30000-32767
      nodePort: 30001